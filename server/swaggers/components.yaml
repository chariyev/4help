components:
  parameters:
    offsetParam:
      in: query
      name: offset
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip
    limitParam:
      in: query
      name: limit
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return
  securitySchemes:
    Token:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: Missing or Invalid Auth Header
    PathIdRequiredError:
      description: UUID is required
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: UUID is required
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: Not Found
    ConflictError:
      description: Conflict occured
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: Conflict happened
    NotValidError:
      description: Must be valid type
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: Must be Valid type
    InvalidCredentialsError:
      description: Must be valid type
      content:
        application/json:
          schema:
            type: object,
            properties:
              status:
                type: string
              message:
                type: string
            example:
              status: fail
              message: Invalid Credentials
